<?php
/**
 * ProcessesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  ProcessMaker\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ProcessMaker API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@processmaker.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.0-beta2
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ProcessMaker\Client;

use \ProcessMaker\Client\Configuration;
use \ProcessMaker\Client\ApiException;
use \ProcessMaker\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProcessesApiTest Class Doc Comment
 *
 * @category Class
 * @package  ProcessMaker\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProcessesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createProcess
     *
     * Save a new process.
     *
     */
    public function testCreateProcess()
    {
    }

    /**
     * Test case for deleteProcess
     *
     * Delete a process.
     *
     */
    public function testDeleteProcess()
    {
    }

    /**
     * Test case for exportProcess
     *
     * Export a single process by ID.
     *
     */
    public function testExportProcess()
    {
    }

    /**
     * Test case for getProcessById
     *
     * Get single process by ID.
     *
     */
    public function testGetProcessById()
    {
    }

    /**
     * Test case for getProcesses
     *
     * Returns all processes that the user has access to.
     *
     */
    public function testGetProcesses()
    {
    }

    /**
     * Test case for importProcess
     *
     * Import a new process.
     *
     */
    public function testImportProcess()
    {
    }

    /**
     * Test case for restoreProcess
     *
     * Restore an inactive process.
     *
     */
    public function testRestoreProcess()
    {
    }

    /**
     * Test case for startProcesses
     *
     * Returns the list of processes that the user can start.
     *
     */
    public function testStartProcesses()
    {
    }

    /**
     * Test case for triggerStartEvent
     *
     * Start a new process.
     *
     */
    public function testTriggerStartEvent()
    {
    }

    /**
     * Test case for updateProcess
     *
     * Update a process.
     *
     */
    public function testUpdateProcess()
    {
    }
}
